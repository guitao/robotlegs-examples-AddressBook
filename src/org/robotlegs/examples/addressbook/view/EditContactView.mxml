<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  width="100%" height="50" verticalAlign="middle" enabled="{contact}" 
		  paddingLeft="15" paddingRight="15" xmlns:vo="org.robotlegs.examples.addressbook.model.vo.*">
	<fx:Script>
		<![CDATA[
			import org.robotlegs.examples.addressbook.events.ContactEvent;
			import org.robotlegs.examples.addressbook.model.vo.Contact;
			
			import mx.events.ValidationResultEvent;
			import mx.validators.Validator;
			
			[Bindable]
			public var contact:Contact;
			
			[Bindable]
			public var formIsValid:Boolean = false;
			
			[Bindable]
			public var formIsEmpty:Boolean = true;
			
			private var focussedFormControl:DisplayObject;
			
			protected function save():void
			{
				contact.name = contactChanged.name;
				contact.phoneNumber = contactChanged.phoneNumber;
				dispatchEvent(new ContactEvent(ContactEvent.UPDATE, contact));
			}
			
			protected function cancelEdit():void
			{
				if(contact.id == 0)
					dispatchEvent(new ContactEvent(ContactEvent.CANCEL_CREATE));
				else
					dispatchEvent(new ContactEvent(ContactEvent.CANCEL_EDIT));
				clearForm();
				focusManager.hideFocus();
			}
			
			private function validateForm(event:Event):void 
			{                    
				focussedFormControl = event.target as DisplayObject;    
				formIsValid = true;            
				formIsEmpty = (contactPhoneNumber.text == "" && contactName.text == ""); 
				validate(phoneNumberValidator);                
				validate(nameValidator);
			}
			
			private function validate(validator:Validator):Boolean
			{                
				var validatorSource:DisplayObject = validator.source as DisplayObject;
				var suppressEvents:Boolean = (validatorSource != focussedFormControl);
				var event:ValidationResultEvent = validator.validate(null, suppressEvents); 
				var currentControlIsValid:Boolean = (event.type == ValidationResultEvent.VALID);
				
				formIsValid = formIsValid && currentControlIsValid;
				
				return currentControlIsValid;
			}
			
			public function clearForm():void
			{
				contact = null;
				formIsValid = false;
				contactName.errorString = "";
				contactPhoneNumber.errorString = "";
			}
			
			public function focusOnName():void
			{
				focusManager.setFocus(contactName);
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<vo:Contact id="contactChanged" name="{contactName.text}" phoneNumber="{contactPhoneNumber.text}"/>
		<mx:PhoneNumberValidator id="phoneNumberValidator" source="{contactPhoneNumber}" property="text"/>
		<mx:StringValidator id="nameValidator" source="{contactName}" property="text" minLength="2" required="true"/>
	</fx:Declarations>
	
	<s:Label text="Edit Contact" fontSize="18" fontWeight="bold"/>
	<mx:Spacer width="20"/>
	<s:Label text="Name:"/>
	<s:TextInput id="contactName" text="{contact.name}" enabled="{contact}" width="150" maxChars="100" change="validateForm(event);"/>
	<s:Label text="Phone Number:"/>
	<s:TextInput id="contactPhoneNumber" text="{contact.phoneNumber}" enabled="{contact}" width="150" change="validateForm(event);"/>
	<mx:Spacer width="100%"/>
	<s:Button label="Save Contact" click="save();" enabled="{formIsValid}"/>
	<s:Button label="Cancel" click="cancelEdit();"/>
</s:HGroup>
